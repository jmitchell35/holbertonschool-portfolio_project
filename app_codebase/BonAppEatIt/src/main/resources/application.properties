# The app
spring.application.name=BonAppEatIt

# DB connection
spring.datasource.url=jdbc:postgresql://localhost:5432/bonappeatit_dev
spring.datasource.username=${POSTGRESQL_USER}
spring.datasource.password=${POSTGRESQL_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

#SQL scripts
spring.sql.init.mode=always

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
# logs SQL queries generated by JPA
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=true
# Not required because detected automatically, but explicit
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Show DDL statements (CREATE TABLE, ALTER TABLE, etc.)
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# DB Connection Pool (HikariCP - included by default) - automatically managed by Spring under the hood
# spring.datasource.hikari.maximum-pool-size=10
# spring.datasource.hikari.minimum-idle=10
# spring.datasource.hikari.connection-timeout=30000

# HTTPS Configuration
server.port=8443
server.ssl.key-store=file:${user.home}/.ssl/bonappeatit-dev-keystore.p12
server.ssl.key-store-password=${BONAPPEATIT_DEV_KEYSTORE_PASSWORD}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=bonappeatit
server.ssl.enabled=true

#Security
# HTTPS only
server.servlet.session.cookie.secure=true
# No JavaScript access
server.servlet.session.cookie.http-only=true
# Cross-Site Request Forgery: session cookie is never shared with another site
server.servlet.session.cookie.same-site=strict
# Session timeout (30 minutes or 1800s)
server.servlet.session.timeout=120m

#Logging
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.org.springframework.security.web.access.intercept.FilterSecurityInterceptor=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=TRACE
# Show what Hibernate is generating for DDL
logging.level.org.hibernate.tool.schema=DEBUG
# Parameter values
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

# Show the actual SQL statements with parameters
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# See exactly what constraints Hibernate creates
logging.level.org.hibernate.tool.schema.internal.ExceptionHandlerLoggedImpl=DEBUG
logging.level.org.hibernate.tool.schema.extract=DEBUG
logging.level.org.hibernate.tool.schema.internal=DEBUG

# See data.sql execution details
logging.level.org.springframework.jdbc.datasource.init=DEBUG
logging.level.org.springframework.boot.sql.init=DEBUG

# Debug: See what the variable resolves to
logging.level.org.springframework.boot.context.config=DEBUG
logging.level.org.springframework.core.env=DEBUG